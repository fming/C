two files:
fred.c, bill

use -c to create target files. 
$ gcc -c bill.c fred.c
$ ls *.o
bill.o fred.o

create a head file:
lib.h

create out program.c

$ gcc -c program.c
$ gcc -o program program.o bill.o
$ ./program

bill: we passed hello world.

Now we are going to create and use a lib file
$ ar crv libfoo.a bill.o fred.o

ranlib is not must for GNU, but not hurt.
$ ranlib libfoo.a

$ gcc -o program program.o libfoo.a

you can also use -l to access libraries.
$ gcc -o program program.o -L. -lfoo
-L. tell the compiler find library from current directory "."
-lfoo tell the compiler find libary libfoo.a or libfoo.so

				UNIX			Windows
object files	func.o			FUNC.OBJ
staic lib		lib.a			LIB.LIB
program			program			PROGRAM.EXE


shared library:
example: /usr/lib/libm.so
ld-lsb.so.2  (2 represent the version)

we can use tool, "ldd" to check the shared libs

$ man gcc
Space key: next page
Enter/Return key: next line
q: exit

more information:
$info gcc
